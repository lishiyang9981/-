#include<stdio.h>
//sizeof_计算一维数组
int main()
{
	//数组名是首元素的地址（以下两个除外）
	//1.sizeof(数组名)--数组名表示整个数组
	//2.&数组名--数组名表示整个数组
	/*无论是数组的元素地址，还是整个数组的地址，
        且无论任何类型（int、char...）都在32位平台占4个字节，64位平台占8个字节*/
	int a[] = { 1,2,3,4 };
	printf("%d\n", sizeof(a));//16

	printf("%d\n", sizeof(a + 0));//4/8  sizeof(数组名+0)！=sizeof(数组名)，这里数组名表示是首元素的地址，
	                              //a+0是跳到下0个元素的地址，此处即还是首元素的地址。

	printf("%d\n", sizeof(*a));//4  数组名是首元素地址，*数组名就是首元素

	printf("%d\n", sizeof(a + 1));//4/8  sizeof(数组名+1)！=sizeof(数组名)，这里数组名表示是首元素的地址，
	                              //a+1是跳到下一个元素的地址，此处即第二个元素的地址。

	printf("%d\n", sizeof(a[1]));//4  第二个元素

	printf("%d\n", sizeof(&a));//4/8  &数组名是整个数组的地址

	printf("%d\n", sizeof(*&a));//16  &数组名是整个数组的地址，sizeof(*&数组名) <=> sizeof(数组名)

	printf("%d\n", sizeof(&a + 1));//4/8  （&数组名+1）表示跳过整个数组，即下一个数组的整个地址

	printf("%d\n", sizeof(&a[0]));//4/8  &数组名[0]即第一个元素地址

	printf("%d\n", sizeof(&a[0] + 1));//4/8  表示跳到下一个元素，此处即第二个元素
	return 0;
}
