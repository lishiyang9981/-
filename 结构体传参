#include<stdio.h>
//结构体传参
typedef struct p
{
	char a;
	int b;
	double c;
}p;

void haha(p* s3)//结构体地址传参，可以修改实参的值
{
	s3->a = 'y';
	s3->b = 40;
	s3->c = 6.28;
}
void bala(p s2)//结构体传参，只能拷贝实参的值
{
	printf("%c %d %lf\n", s2.a, s2.b, s2.c);
}
int main()
{
	p s1 = { 'w',20,3.14 };
	bala(s1);//结构体传参
	haha(&s1);//结果体地址传参
	printf("%c %d %lf\n", s1.a, s1.b, s1.c);
	return 0;
/*函数传参的时候，参数是需要压栈，会有时间和空间上的系统开销。
如果传递一个结构体对象的时候，结构体过大，参数压栈的的系统开销比较大，所以会导致性能的下降。
结论： 结构体传参的时候，要传结构体的地址*/
}
